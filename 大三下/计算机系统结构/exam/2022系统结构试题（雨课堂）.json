{"errcode":0,"errmsg":"","data":{"problems":[{"key":1,"Body":"<p>程序的顺序执行,是造成时间局部性原因之一。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"296ff75773094a11847c233f0989e484","unionid":"1655172163778-20979","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177327,"max_retry":1,"showScore":true,"TemplateID":916741,"difficulty":1,"library_id":11775,"problem_id":177327,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      1.（判断题）\n      </span>\n      <p>&nbsp;程序的顺序执行,是造成时间局部性原因之一。\n &nbsp;</p>\n    ","template_id":916741,"problemIndex":1,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":2,"Body":"<p>组相联映射是对全相联和直接映射的一种折中,组间采用全相联映射,组内采用直接映像。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"ca98ea1e4d5e4f3797e0c575c2a4fa0f","unionid":"1655172163778-60509","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177328,"max_retry":1,"showScore":true,"TemplateID":916754,"difficulty":1,"library_id":11775,"problem_id":177328,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      2.（判断题）\n      </span>\n       \n  组相联映射是对全相联和直接映射的一种折中,组间采用全相联映射,组内采用直接映像。\n   \n    ","template_id":916754,"problemIndex":2,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":3,"Body":"<p>采用多种寻址方式可以减少程序的指令条数,但可能增加处理器实现的复杂度以及指令的CPI。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"57f2ad09f4ae4199957c39d4fae838db","unionid":"1655172163778-49942","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177329,"max_retry":1,"showScore":true,"TemplateID":916755,"difficulty":1,"library_id":11775,"problem_id":177329,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      3.（判断题）\n      </span>\n       \n  采用多种寻址方式可以减少程序的指令条数,但可能增加处理器实现的复杂度以及指令的CPI。    \n    ","template_id":916755,"problemIndex":3,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":4,"Body":"<p>流水线属于时间重叠/并行技术。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"d7196f0b724f435cb9b0c7605ed8d606","unionid":"1655172163778-73490","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177330,"max_retry":1,"showScore":true,"TemplateID":916757,"difficulty":1,"library_id":11775,"problem_id":177330,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      4.（判断题）\n      </span>\n       \n  流水线属于时间重叠/并行技术。     \n    ","template_id":916757,"problemIndex":4,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":5,"Body":"<p>数据总线宽度对于高级程序员来说是透明的。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"3da7f60eb35746d7b329d559b5c36d79","unionid":"1655172163778-18713","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177331,"max_retry":1,"showScore":true,"TemplateID":916758,"difficulty":1,"library_id":11775,"problem_id":177331,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      5.（判断题）\n      </span>\n       \n  数据总线宽度对于高级程序员来说是透明的。\n   \n    ","template_id":916758,"problemIndex":5,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":6,"Body":"<p>某型号处理器增加几条媒体处理指令后,不会影响其软件的向后兼容性。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"3a87d5b0354140c58c9cd9a98003f62d","unionid":"1655172163778-89223","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177332,"max_retry":1,"showScore":true,"TemplateID":916759,"difficulty":1,"library_id":11775,"problem_id":177332,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      6.（判断题）\n      </span>\n       \n  某型号处理器增加几条媒体处理指令后,不会影响其软件的向后兼容性。\n   \n    ","template_id":916759,"problemIndex":6,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":7,"Body":"<p>在顺序发射、顺序完成的指令单流水线中,不存在WAW和WAR冲突。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"75a77ca0e8fb480b8093b6e46bcbe9a8","unionid":"1655172163778-77334","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177333,"max_retry":1,"showScore":true,"TemplateID":916760,"difficulty":1,"library_id":11775,"problem_id":177333,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      7.（判断题）\n      </span>\n       \n  在顺序发射、顺序完成的指令单流水线中,不存在WAW和WAR冲突。    \n    ","template_id":916760,"problemIndex":7,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":8,"Body":"<p>在指令字长确定的情况下,指令系统设计需综合考虑寄存器个数、寻址方式、立即数长度等需求。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"98916bfc637b4c529366befe62350380","unionid":"1655172163778-57210","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177334,"max_retry":1,"showScore":true,"TemplateID":916761,"difficulty":1,"library_id":11775,"problem_id":177334,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      8.（判断题）\n      </span>\n       \n  在指令字长确定的情况下,指令系统设计需综合考虑寄存器个数、寻址方式、立即数长度等需求。\n   \n    ","template_id":916761,"problemIndex":8,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":9,"Body":"<p>动态多功能流水线通过不同连接方式允许在同一时刻执行不同功能。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"5f80eb77bd2f4ea99ccf269da74bf201","unionid":"1655172163778-69289","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177335,"max_retry":1,"showScore":true,"TemplateID":916762,"difficulty":1,"library_id":11775,"problem_id":177335,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      9.（判断题）\n      </span>\n       \n  动态多功能流水线通过不同连接方式允许在同一时刻执行不同功能。\n   \n    ","template_id":916762,"problemIndex":9,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":10,"Body":"<p>减小CPI是RISC架构的精华,而只有Load和Store指令可以访存则是RISC\n 架构的根本。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"ebdfe0be57954626a6616ead228819df","unionid":"1655172163778-66085","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177336,"max_retry":1,"showScore":true,"TemplateID":916753,"difficulty":1,"library_id":11775,"problem_id":177336,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      10.（判断题）\n      </span>\n      <p>&nbsp;减小CPI是RISC架构的精华,而只有Load和Store指令可以访存则是RISC\n 架构的根本。 &nbsp; &nbsp;</p>\n    ","template_id":916753,"problemIndex":10,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":11,"Body":"<p>从系统结构角度看,增加流水线级数可以提高处理器频率。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"66e7a8ee087b49d896c622fcd20931e7","unionid":"1655172163778-41962","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177337,"max_retry":1,"showScore":true,"TemplateID":916763,"difficulty":1,"library_id":11775,"problem_id":177337,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      11.（判断题）\n      </span>\n       \n  从系统结构角度看,增加流水线级数可以提高处理器频率。\n   \n    ","template_id":916763,"problemIndex":11,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":12,"Body":"<p>增加Cache组相联度将会减少Cache的冲突缺失次数,但会增加命中时间。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"2305430600554b0ba8fe72d516d41e41","unionid":"1655172163778-38967","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177338,"max_retry":1,"showScore":true,"TemplateID":916764,"difficulty":1,"library_id":11775,"problem_id":177338,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      12.（判断题）\n      </span>\n       \n  增加Cache组相联度将会减少Cache的冲突缺失次数,但会增加命中时间。    \n    ","template_id":916764,"problemIndex":12,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":13,"Body":"<p>多级层次存储系统一定要满足包含关系,即上层缓存中的数据一定可以在其下级存储器中找到。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"eda4599c98484b39b23c6d255c0d3a15","unionid":"1655172163778-83330","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177339,"max_retry":1,"showScore":true,"TemplateID":916765,"difficulty":1,"library_id":11775,"problem_id":177339,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      13.（判断题）\n      </span>\n       \n  多级层次存储系统一定要满足包含关系,即上层缓存中的数据一定可以在其下级存储器中找到。\n   \n    ","template_id":916765,"problemIndex":13,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":14,"Body":"<p>采用写回(write-back)的Cache,当发生读缺失时,有时会引起写主存操作。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"773a4b98578c459486ccca50b85d3a41","unionid":"1655172163778-34909","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177340,"max_retry":1,"showScore":true,"TemplateID":916766,"difficulty":1,"library_id":11775,"problem_id":177340,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      14.（判断题）\n      </span>\n       \n  采用写回(write-back)的Cache,当发生读缺失时,有时会引起写主存操作。    \n    ","template_id":916766,"problemIndex":14,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":15,"Body":"<p>DRAM的密度比SRAM的密度大。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"5b49281889b04cea808dcf267be0b24c","unionid":"1655172163778-2277","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177341,"max_retry":1,"showScore":true,"TemplateID":916767,"difficulty":1,"library_id":11775,"problem_id":177341,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      15.（判断题）\n      </span>\n       \n  DRAM的密度比SRAM的密度大。    \n    ","template_id":916767,"problemIndex":15,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":16,"Body":"<p>在Cache-主存存储层次中,Cache块越大,则强制缺失次数 &nbsp; (compulsory &nbsp; miss)越少。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":true,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"0a6bf3d7fb1f4580aa5fecd16cbaee0a","unionid":"1655197429720-40437","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177342,"max_retry":1,"showScore":true,"TemplateID":916752,"difficulty":1,"library_id":11775,"problem_id":177342,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      16.（判断题）\n      </span>\n      <p>在Cache-主存存储层次中,Cache块越大,则强制缺失次数(compulsory miss)越少。 &nbsp; &nbsp;</p>\n    ","template_id":916752,"problemIndex":16,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":17,"Body":"<p>为了支持精确中断,Tomasulo算法需要ROB(Reorder Buffer)支持。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"299246c67fe442bbac0144a084e14989","unionid":"1655172163778-92605","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177343,"max_retry":1,"showScore":true,"TemplateID":916751,"difficulty":1,"library_id":11775,"problem_id":177343,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      17.（判断题）\n      </span>\n      <p>为了支持精确中断,Tomasulo算法需要ROB(Reorder Buffer)支持。 &nbsp; &nbsp;</p>\n    ","template_id":916751,"problemIndex":17,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":18,"Body":"<p>平均每条指令的执行周期数与程序无关。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"cd5a20c774394efa9f7d05ee113ed5dd","unionid":"1655172163778-71268","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177344,"max_retry":1,"showScore":true,"TemplateID":916768,"difficulty":1,"library_id":11775,"problem_id":177344,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      18.（判断题）\n      </span>\n       \n  平均每条指令的执行周期数()与程序无关。    \n    ","template_id":916768,"problemIndex":18,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":19,"Body":"<p>Victim Cache是位于CPU和Cache间的又一级Cache。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"e94d09d1f9564a039fb2a1b62e894828","unionid":"1655172163778-2573","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177345,"max_retry":1,"showScore":true,"TemplateID":916750,"difficulty":1,"library_id":11775,"problem_id":177345,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      19.（判断题）\n      </span>\n      <p>Victim Cache是位于CPU和Cache间的又一级Cache。 &nbsp; &nbsp;</p>\n    ","template_id":916750,"problemIndex":19,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":20,"Body":"<p>通过寄存器重命名,可以消除WAW和WAR相关。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"76238bebc2cc4ee59c6fe655a51abf5b","unionid":"1655172163778-43848","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177346,"max_retry":1,"showScore":true,"TemplateID":916749,"difficulty":1,"library_id":11775,"problem_id":177346,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      20.（判断题）\n      </span>\n      <p>通过寄存器重命名,可以消除WAW和WAR相关。 &nbsp; &nbsp;</p>\n    ","template_id":916749,"problemIndex":20,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":21,"Body":"<p>关键字优先或早启动(early restart)技术可减少Cache缺失率。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":true,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"b6b72bed965046c2a3fe61b1d9751306","unionid":"1655172163778-25089","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177347,"max_retry":1,"showScore":true,"TemplateID":916748,"difficulty":1,"library_id":11775,"problem_id":177347,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      21.（判断题）\n      </span>\n      <p>关键字优先或早启动(early restart)技术可减少Cache缺失率。 &nbsp; &nbsp;</p>\n    ","template_id":916748,"problemIndex":21,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":22,"Body":"<p>较小而简单的Cache有利于减少命中时间,但会提高缺失率。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"1d4930a97fa9406a90ea592f86d99f6d","unionid":"1655172163778-36350","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177348,"max_retry":1,"showScore":true,"TemplateID":916769,"difficulty":1,"library_id":11775,"problem_id":177348,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      22.（判断题）\n      </span>\n       \n  较小而简单的Cache有利于减少命中时间,但会提高缺失率。    \n    ","template_id":916769,"problemIndex":22,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":23,"Body":"<p>INTEL安腾处理器采用的是VLIW架构。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"208a62ae5b9c49aa8a18ccd5a1a64b10","unionid":"1655172163778-92539","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177349,"max_retry":1,"showScore":true,"TemplateID":916770,"difficulty":1,"library_id":11775,"problem_id":177349,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      23.（判断题）\n      </span>\n       \n  INTEL安腾处理器采用的是VLIW架构。    \n    ","template_id":916770,"problemIndex":23,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":24,"Body":"<p>采用写通过(write-through)策略,需要使用写缓冲器(write buffer)来提高性能,而采用写回策略的Cache则没有必要使用写缓冲器。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"fbae80b3e9ba47f4902336d7fd513429","unionid":"1655172163778-42225","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177350,"max_retry":1,"showScore":true,"TemplateID":916747,"difficulty":1,"library_id":11775,"problem_id":177350,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      24.（判断题）\n      </span>\n      <p>采用写通过(write-through)策略,需要使用写缓冲器(write buffer)来提高性能,而采用写回策略的Cache则没有必要使用写缓冲器。 &nbsp; &nbsp;</p>\n    ","template_id":916747,"problemIndex":24,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":25,"Body":"<p>乱序执行的处理器采用多路组相联Cache时,为了减少功耗, 一般采用Tag比较和数据访问串行的方式,并通过指令乱序执行来弥补由于存储访问延迟造成的性能下降问题。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":true,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"f03ac5ed068e4104b0af6868966a6174","unionid":"1655172163778-74087","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177351,"max_retry":1,"showScore":true,"TemplateID":916746,"difficulty":1,"library_id":11775,"problem_id":177351,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      25.（判断题）\n      </span>\n      <p>乱序执行的处理器采用多路组相联Cache时,为了减少功耗, 一般采用Tag比较和数据访问串行的方式,并通过指令乱序执行来弥补由于存储访问延迟造成的性能下降问题。 &nbsp; &nbsp;</p>\n    ","template_id":916746,"problemIndex":25,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":26,"Body":"<p>伪相联(Pseudo-Associativity)Cache由于变化的命中时间对CPU流水线影响较大,一般适合离CPU远的Cache。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"e4062cc05eca40ed94e07ec98290c21c","unionid":"1655172163778-15006","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177352,"max_retry":1,"showScore":true,"TemplateID":916745,"difficulty":1,"library_id":11775,"problem_id":177352,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      26.（判断题）\n      </span>\n      <p>伪相联(Pseudo-Associativity)Cache由于变化的命中时间对CPU流水线影响较大,一般适合离CPU远的Cache。 &nbsp; &nbsp;</p>\n    ","template_id":916745,"problemIndex":26,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":27,"Body":"<p>&nbsp;向量指令间存在针对同一向量寄存器的RAR(read after read)冲突。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":true,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"b5ddf423dca24bea91cd405c980a108c","unionid":"1655172163778-4953","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177353,"max_retry":1,"showScore":true,"TemplateID":916744,"difficulty":1,"library_id":11775,"problem_id":177353,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      27.（判断题）\n      </span>\n      <p>&nbsp;向量指令间存在针对同一向量寄存器的RAR(read after read)冲突。 &nbsp; &nbsp;</p>\n    ","template_id":916744,"problemIndex":27,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":28,"Body":"<p>&nbsp;半性能向量长度n<sub>1/2</sub>等于向量寄存器长度的1/2。 &nbsp; &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"9371b4fe95164520a8394d0db7e512bf","unionid":"1655172163778-69432","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177354,"max_retry":1,"showScore":true,"TemplateID":916743,"difficulty":1,"library_id":11775,"problem_id":177354,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      28.（判断题）\n      </span>\n      <p>&nbsp;半性能向量长度n<sub>1/2</sub>等于向量寄存器长度的1/2。 &nbsp; &nbsp;</p>\n    ","template_id":916743,"problemIndex":28,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":29,"Body":"<p>&nbsp;通过编译将循环展开成4个循环体时, 一般可减少6条指令(测试和分支)。\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":true,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"9572113da88a4fe7b023043310f71d3c","unionid":"1655172163778-31522","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177355,"max_retry":1,"showScore":true,"TemplateID":916742,"difficulty":1,"library_id":11775,"problem_id":177355,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      29.（判断题）\n      </span>\n      <p>&nbsp;通过编译将循环展开成\n 4\n 个循环体时, 一般可减少6条指令(测试和分支)。\n &nbsp;</p>\n    ","template_id":916742,"problemIndex":29,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":30,"Body":"<p>循环展开通过寄存器重命名和指令调度可有效开发指令级并行。\n &nbsp; \n \n\n\n\n &nbsp;</p>","Type":"Judgement","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"true","value":""},{"key":"false","value":""}],"Version":"a5ff2a5c7efc41d5be93ace9d56faba7","unionid":"1655172163778-74591","TypeText":"判断题","HasRemark":false,"LibraryID":11775,"ProblemID":177356,"max_retry":1,"showScore":true,"TemplateID":916771,"difficulty":1,"library_id":11775,"problem_id":177356,"remarkFold":true,"ProblemType":6,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      30.（判断题）\n      </span>\n       \n  循环展开通过寄存器重命名和指令调度可有效开发指令级并行。\n   \n \n\n\n\n  \n\n\n    ","template_id":916771,"problemIndex":30,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":31,"Body":"<p>假定load和store指令占所有指令的比例为30%,指令Cache的缺失率是2%,数据Cache的缺失率是5%,Cache缺失代价都为100个周期。如果没有任何访存缺失,处理器的CPI为2。如果考虑访存缺失,那么该处理器的CPI是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>5.5<br/></p>"},{"key":"B","value":"<p>3.5</p>"},{"key":"C","value":"<p>6</p>"},{"key":"D","value":"<p>3</p>"}],"Version":"97e8126100784d99bc6864b9ab75752f","unionid":"1655197429720-49115","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177357,"max_retry":1,"showScore":true,"TemplateID":916780,"difficulty":1,"library_id":11775,"problem_id":177357,"remarkFold":true,"ProblemType":1,"answerIndex":0,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      31.（单选题）\n      </span>\n      <p>假定load和store指令占所有指令的比例为30%,指令Cache的缺失率是2%,数据Cache的缺失率是5%,Cache缺失代价都为100个周期。如果没有任何访存缺失,处理器的CPI为2。如果考虑访存缺失,那么该处理器的CPI是</p>\n    ","template_id":916780,"problemIndex":31,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":32,"Body":"<p>在执行一段对数组元素求和的循环代码时,以下说法最合适的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>会体现出数据访问的时间局部性和空间局部性</p>"},{"key":"B","value":"<p>会体现出代码访问的时间局部性和空间局部性</p>"},{"key":"C","value":"<p>既会体现出数据访问的时间局部性和空间局部性,也会体现出代码访问的时间局部性和空间局部性</p>"},{"key":"D","value":"<p>以上说法皆不对</p>"}],"Version":"8cdd486f807a4fb4a3d1168d8d0ba427","unionid":"1655197429720-89195","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177358,"max_retry":1,"showScore":true,"TemplateID":916781,"difficulty":1,"library_id":11775,"problem_id":177358,"remarkFold":true,"ProblemType":1,"answerIndex":2,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      32.（单选题）\n      </span>\n      <p>在执行一段对数组元素求和的循环代码时,以下说法最合适的是</p>\n    ","template_id":916781,"problemIndex":32,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":33,"Body":"<p>在发展高性能单处理机过程中,起主导作用的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>资源重复</p>"},{"key":"B","value":"<p>时间重叠/并行</p>"},{"key":"C","value":"<p>资源共享</p>"},{"key":"D","value":"<p>局部性原理</p>"}],"Version":"bedbd852d6d64a70850e612480734dc8","unionid":"1655174562339-63673","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177359,"max_retry":1,"showScore":true,"TemplateID":916782,"difficulty":1,"library_id":11775,"problem_id":177359,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      33.（单选题）\n      </span>\n      <p>在发展高性能单处理机过程中,起主导作用的是</p>\n    ","template_id":916782,"problemIndex":33,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":34,"Body":"<p>关于计算机系统的性能指标:执行时间和吞吐率,下列说法错误的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":true,"isEdit":true,"Options":[{"key":"A","value":"<p>管理员更关注吞吐率</p>"},{"key":"B","value":"<p>用户更关注执行时间</p>"},{"key":"C","value":"<p>执行时间短意味着吞吐率高</p>"},{"key":"D","value":"<p>用户看到的程序执行时间不仅仅是CPU执行该程序的时间</p>"}],"Version":"77d4871c9a514ae3a4ce3a2ca40ea2e8","unionid":"1655174562339-52586","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177360,"max_retry":1,"showScore":true,"TemplateID":916783,"difficulty":1,"library_id":11775,"problem_id":177360,"remarkFold":true,"ProblemType":1,"answerIndex":2,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      34.（单选题）\n      </span>\n      <p> \n  关于计算机系统的性能指标:执行时间和吞吐率,下列说法错误的是\n         \n \n</p>\n    ","template_id":916783,"problemIndex":34,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":35,"Body":"<p>指令系统采用不同寻址方式的目的主要是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>实现程序存储与程序控制</p>"},{"key":"B","value":"<p>缩短指令长度,扩大寻址空间,提高编程灵活性</p>"},{"key":"C","value":"<p>可直接访问外存</p>"},{"key":"D","value":"<p>提供扩展操作码的可能并降低指令译码难度</p>"}],"Version":"0a091b1159b746d7bf9658314566787f","unionid":"1655174562339-41485","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177361,"max_retry":1,"showScore":true,"TemplateID":916784,"difficulty":1,"library_id":11775,"problem_id":177361,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      35.（单选题）\n      </span>\n      <p> \n  指令系统采用不同寻址方式的目的主要是\n                                 \n \n</p>\n    ","template_id":916784,"problemIndex":35,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":36,"Body":"<p>下列关于指令系统说法错误的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>指令系统不仅仅是定义了各种指令</p>"},{"key":"B","value":"<p>具有相同指令系统的计算机其程序可相互兼容</p>"},{"key":"C","value":"<p>具有相同指令系统的计算机其微架构必然相同</p>"},{"key":"D","value":"<p>指令系统定义了计算机软硬件接口</p>"}],"Version":"71470e8c50814aa4aaca736f26ddb9da","unionid":"1655174562339-44278","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177362,"max_retry":1,"showScore":true,"TemplateID":916785,"difficulty":1,"library_id":11775,"problem_id":177362,"remarkFold":true,"ProblemType":1,"answerIndex":2,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      36.（单选题）\n      </span>\n      <p> \n  下列关于指令系统说法错误的是\n                                         \n \n</p>\n    ","template_id":916785,"problemIndex":36,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":37,"Body":"<p>关于流水线分类,以下说法错误的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>单功能流水线可分为静态与动态流水线</p>"},{"key":"B","value":"<p>流水线可分为单功能与多功能流水线</p>"},{"key":"C","value":"<p>流水线可分为线性与非线性流水线</p>"},{"key":"D","value":"<p>流水线可分为顺序与乱序流水线</p>"}],"Version":"3b88ac9de749451f94da871cb7104bf1","unionid":"1655174562339-2189","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177363,"max_retry":1,"showScore":true,"TemplateID":916786,"difficulty":1,"library_id":11775,"problem_id":177363,"remarkFold":true,"ProblemType":1,"answerIndex":0,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      37.（单选题）\n      </span>\n      <p> \n  关于流水线分类,以下说法错误的是\n                                   \n \n</p>\n    ","template_id":916786,"problemIndex":37,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":38,"Body":"<p>以下哪个指标不是评价流水线性能的常用指标?</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>吞吐率</p>"},{"key":"B","value":"<p>加速比</p>"},{"key":"C","value":"<p>功耗</p>"},{"key":"D","value":"<p>效率</p>"}],"Version":"1df3fcf0cc9d41faa3b988868d1743d0","unionid":"1655174562339-89384","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177364,"max_retry":1,"showScore":true,"TemplateID":916787,"difficulty":1,"library_id":11775,"problem_id":177364,"remarkFold":true,"ProblemType":1,"answerIndex":2,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      38.（单选题）\n      </span>\n      <p> \n  以下哪个指标不是评价流水线性能的常用指标?\n                          \n \n</p>\n    ","template_id":916787,"problemIndex":38,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":39,"Body":"<p>各流水段的执行时间并不完全相等的流水线中,最大吞吐率受限于</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>排空时间</p>"},{"key":"B","value":"<p>瓶颈段的执行时长</p>"},{"key":"C","value":"<p>建立时间</p>"},{"key":"D","value":"<p>段数</p>"}],"Version":"55742351678942e8bd0d9a7715a1abe7","unionid":"1655174562339-44178","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177365,"max_retry":1,"showScore":true,"TemplateID":916788,"difficulty":1,"library_id":11775,"problem_id":177365,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      39.（单选题）\n      </span>\n      <p> \n  各流水段的执行时间并不完全相等的流水线中,最大吞吐率受限于\n          \n \n</p>\n    ","template_id":916788,"problemIndex":39,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":40,"Body":"<p>以下关于数据相关的说法错误的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>相关一定会转化为流水线冲突</p>"},{"key":"B","value":"<p>相关是程序固有的属性</p>"},{"key":"C","value":"<p>相关分为数据相关、控制相关与名相关</p>"},{"key":"D","value":"<p>名相关可分为输出相关与反相关</p>"}],"Version":"11287b1ae5a84b0684830c6e4f5f57da","unionid":"1655174562339-67955","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177366,"max_retry":1,"showScore":true,"TemplateID":916789,"difficulty":1,"library_id":11775,"problem_id":177366,"remarkFold":true,"ProblemType":1,"answerIndex":0,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      40.（单选题）\n      </span>\n      <p> \n  以下关于数据相关的说法错误的是\n                                      \n \n</p>\n    ","template_id":916789,"problemIndex":40,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":41,"Body":"<p>理论上,以下哪个选项不会影响分支指令性能?</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>何时算出分支是否成功</p>"},{"key":"B","value":"<p>分支成功时,何时算出分支目标地址</p>"},{"key":"C","value":"<p>分支成功时,目标指令是否在指令Cache中</p>"},{"key":"D","value":"<p>分支成功时,分支指令后续指令的处理</p>"}],"Version":"1ff2725e47de4deaa7e2956c30f80d6e","unionid":"1655174562339-24460","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177367,"max_retry":1,"showScore":true,"TemplateID":916790,"difficulty":1,"library_id":11775,"problem_id":177367,"remarkFold":true,"ProblemType":1,"answerIndex":3,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      41.（单选题）\n      </span>\n      <p> \n  理论上,以下哪个选项不会影响分支指令性能?\n                          \n \n</p>\n    ","template_id":916790,"problemIndex":41,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":42,"Body":"<p>层次存储系统中寄存器容量 &lt;&lt; Cache容量 &lt;&lt; 主存容量，其主要因素是：&nbsp;<!--<--></p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>速度</p>"},{"key":"B","value":"<p>成本</p>"},{"key":"C","value":"<p>密度</p>"},{"key":"D","value":"<p>复杂性</p>"}],"Version":"2d2f36d0c9c946a8ab8e64a4e8d74a64","unionid":"1655174562339-75360","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177368,"max_retry":1,"showScore":true,"TemplateID":916791,"difficulty":1,"library_id":11775,"problem_id":177368,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      42.（单选题）\n      </span>\n      <p> \n  层次存储系统中寄存器容量\n <<\n Cache容量  <<\n 主存容量,其主要因素是      \n </p>\n    ","template_id":916791,"problemIndex":42,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":43,"Body":"<p>以下哪种结构能够避免取指与访问操作数之间的访存冲突?</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>冯诺依曼结构</p>"},{"key":"B","value":"<p>哈佛结构</p>"},{"key":"C","value":"<p>层次存储</p>"},{"key":"D","value":"<p>并行存储器</p>"}],"Version":"6f344ba249074ba49b738c4f0da0e477","unionid":"1655174562339-35845","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177369,"max_retry":1,"showScore":true,"TemplateID":916792,"difficulty":1,"library_id":11775,"problem_id":177369,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      43.（单选题）\n      </span>\n      <p> \n  以下哪种结构能够避免取指与访问操作数之间的访存冲突?\n                 \n \n</p>\n    ","template_id":916792,"problemIndex":43,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":44,"Body":"<p>在一个多级存储系统M1、M2、…Mn 中。下面关于存储系统期望达到的目标说法错误的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>整个存储系统的容量应该接近于Mn的容量</p>"},{"key":"B","value":"<p>整个存储系统的访问时间应该接近于Mn的访问时间</p>"},{"key":"C","value":"<p>整个存储系统的平均每位价格应该接近于Mn的平均每位价格</p>"},{"key":"D","value":"<p>整个存储系统的访问时间应该接近于M1的访问时间</p>"}],"Version":"17a45bd07356430abb8d0bc1b9593d61","unionid":"1655174562339-23115","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177370,"max_retry":1,"showScore":true,"TemplateID":916798,"difficulty":1,"library_id":11775,"problem_id":177370,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      44.（单选题）\n      </span>\n      <p> \n  在一个多级存储系统M1、M2,\n … Mn 中。下面关于存储系统期望达到的目标说法错误的是                                                          \n \n</p>\n    ","template_id":916798,"problemIndex":44,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":45,"Body":"<p>采用指令Cache与数据Cache分离的主要目的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>降低Cache的缺失代价</p>"},{"key":"B","value":"<p>提高Cache的命中率</p>"},{"key":"C","value":"<p>降低CPU平均访存时间</p>"},{"key":"D","value":"<p>减少指令流水线中Cache的访问冲突</p>"}],"Version":"88551d5e6d754b38b8786353ac324e87","unionid":"1655174562339-39905","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177371,"max_retry":1,"showScore":true,"TemplateID":916799,"difficulty":1,"library_id":11775,"problem_id":177371,"remarkFold":true,"ProblemType":1,"answerIndex":3,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      45.（单选题）\n      </span>\n      <p> \n  采用指令Cache与数据Cache分离的主要目的是                             \n \n</p>\n    ","template_id":916799,"problemIndex":45,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":46,"Body":"<p>下列关于Cache的映像规则中,哪种映像规则的Cache利用率最高?</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>全相联</p>"},{"key":"B","value":"<p>组相联</p>"},{"key":"C","value":"<p>直接映射</p>"},{"key":"D","value":"<p>段相联</p>"}],"Version":"c982c4df2d2b406b90eda565e858648d","unionid":"1655174562339-32926","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177372,"max_retry":1,"showScore":true,"TemplateID":916800,"difficulty":1,"library_id":11775,"problem_id":177372,"remarkFold":true,"ProblemType":1,"answerIndex":0,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      46.（单选题）\n      </span>\n      <p> \n  下列关于Cache的映像规则中,哪种映像规则的Cache利用率最高?         \n \n</p>\n    ","template_id":916800,"problemIndex":46,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":47,"Body":"<p>一般情况下,下面哪种并行主存系统的访存效率最高?</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>单体单字存储器</p>"},{"key":"B","value":"<p>多体高位交叉存储器</p>"},{"key":"C","value":"<p>单体多字存储器</p>"},{"key":"D","value":"<p>多体低位交叉存储器</p>"}],"Version":"15e463913fed4f0caf47bed2b8a0a714","unionid":"1655174562339-67133","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177373,"max_retry":1,"showScore":true,"TemplateID":916801,"difficulty":1,"library_id":11775,"problem_id":177373,"remarkFold":true,"ProblemType":1,"answerIndex":3,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      47.（单选题）\n      </span>\n      <p> \n  一般情况下,下面哪种并行主存系统的访存效率最高?\n                      \n \n</p>\n    ","template_id":916801,"problemIndex":47,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":48,"Body":"<p>以下说法错误的是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>用间址寻址方式可以缩短地址码长度</p>"},{"key":"B","value":"<p>用变址寻址方式可以缩短地址码长度</p>"},{"key":"C","value":"<p>用寄存器间接寻址方式可以缩短地址码长度</p>"},{"key":"D","value":"<p>一般说来,用RISC计算机编程比用CISC计算机编程所占程序存储空间更小</p>"}],"Version":"6e1b851c278944dcbfed585dcc1f84c6","unionid":"1655174562339-76873","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177374,"max_retry":1,"showScore":true,"TemplateID":916802,"difficulty":1,"library_id":11775,"problem_id":177374,"remarkFold":true,"ProblemType":1,"answerIndex":3,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      48.（单选题）\n      </span>\n      <p> \n  以下说法错误的是                                                     \n \n</p>\n    ","template_id":916802,"problemIndex":48,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":49,"Body":"<p>RISC计算机LOAD和STORE指令平均占总指令数的比例分别是18%和6%，则每执行一条指令，平均访问存储器次数是：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>1.24</p>"},{"key":"B","value":"<p>0.18</p>"},{"key":"C","value":"<p>0.06</p>"},{"key":"D","value":"<p>0.24</p>"}],"Version":"902b5b8a921a42ef895505a4d2236196","unionid":"1655174562339-83511","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177375,"max_retry":1,"showScore":true,"TemplateID":916803,"difficulty":1,"library_id":11775,"problem_id":177375,"remarkFold":true,"ProblemType":1,"answerIndex":0,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      49.（单选题）\n      </span>\n      <p> \n  RISC计算机  LOAD和STORE\n 指令平均占总指令数的比例分别是18%和6%,\n 则每执行一条指令,平均访问存储器次数是                                    \n \n</p>\n    ","template_id":916803,"problemIndex":49,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":50,"Body":"<p>下面哪种说法具有不确定性?</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>增加\n Cache\n 容量,会减小容量缺失,增加命中时间</p>"},{"key":"B","value":"<p>增加Cache相联度,会减少冲突缺失,增加命中时间 &nbsp;(假设 Cache\n 容量固定)</p>"},{"key":"C","value":"<p>增加\n Cache\n 块大小,会减少强制缺失,增加命中时间 &nbsp;(假设 Cache\n 容量固定)</p>"},{"key":"D","value":"<p>增加\n Cache\n 块大小,会增加缺失代价</p>"},{"key":"E","value":"<p>增加L1(第一级) &nbsp;Cache\n 相联度,对增加其容量有利</p>"}],"Version":"63e92ddf368b4cbe80ae50511ef56c18","unionid":"1655174562339-65261","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177376,"max_retry":1,"showScore":true,"TemplateID":916804,"difficulty":1,"library_id":11775,"problem_id":177376,"remarkFold":true,"ProblemType":1,"answerIndex":2,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      51.（单选题）\n      </span>\n      <p> \n  下面哪种说法具有不确定性?\n                                           \n \n</p>\n    ","template_id":916804,"problemIndex":50,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":51,"Body":"<p>以下哪种技术不能减少Cache缺失代价(miss penalties)?</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>多级\n Cache</p>"},{"key":"B","value":"<p>关键字优先</p>"},{"key":"C","value":"<p>写缓冲合并(Merging\n Write Buffer)</p>"},{"key":"D","value":"<p>软件/硬件预取</p>"},{"key":"E","value":"<p>让读不命中优先于写</p>"}],"Version":"9f9732d029664ea59f296aa811d84335","unionid":"1655174562339-59336","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177377,"max_retry":1,"showScore":true,"TemplateID":916805,"difficulty":1,"library_id":11775,"problem_id":177377,"remarkFold":true,"ProblemType":1,"answerIndex":3,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      51.（单选题）\n      </span>\n      <p> \n  以下哪种技术不能减少Cache缺失代价(miss\n penalties)?                    \n \n</p>\n    ","template_id":916805,"problemIndex":51,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":52,"Body":"<p>在一个5段的流水线处理机上需经9拍才能完成一个任务,其预约表如下表所示,该预约表对应的原始冲突向量是： &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/7037a521-e394-4741-b436-3f52a7df5c54.png\" alt=\"image.png\" width=\"80%\" height=\"auto\"/></p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":true,"isEdit":true,"Options":[{"key":"A","value":"<p>10110011</p>"},{"key":"B","value":"<p>10110001</p>"},{"key":"C","value":"<p>10001101</p>"},{"key":"D","value":"<p>11001101</p>"}],"Version":"70a075addd54487e8490fc5917250e9a","unionid":"1655174562339-87020","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177378,"max_retry":1,"showScore":true,"TemplateID":916806,"difficulty":1,"library_id":11775,"problem_id":177378,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      52.（单选题）\n      </span>\n      <p> \n  在一个5段的流水线处理机上需经9拍才能完成一个任务,其预约表如下表所示,该预约表对应的初始冲突向量是                                             \n \n\n  \n     \n     功能段\n   \n   \n     1\n   \n   \n     2\n   \n   \n     3\n   \n   \n     4\n   \n   \n     5\n   \n   \n     6\n   \n   \n     7\n   \n   \n     8\n   \n   \n     9\n   \n  \n     </p>\n    ","template_id":916806,"problemIndex":52,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":53,"Body":"<p>如上题(单选22题)所示预约表,通过插入非计算延迟可以实现流水线的无冲突最优调度,此时可以达到的流水线的最大吞吐率是(假设流水线时钟周期为<img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/752f1c45-11fe-4563-b019-797aef87209f\" align=\"absmiddle\" width=\"\" height=\"\"/> )：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"valid":false,"isEdit":true,"Options":[{"key":"A","value":"<p>（1/2）&nbsp;<img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/2f683bd6-0708-4627-9605-638deb374fc5\" align=\"absmiddle\" width=\"\" height=\"\"/></p>"},{"key":"B","value":"<p>（1/3）&nbsp;<img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/2f683bd6-0708-4627-9605-638deb374fc5\" align=\"absmiddle\" width=\"\" height=\"\" style=\"white-space: normal;\"/></p>"},{"key":"C","value":"<p>（1/5）&nbsp;<img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/2f683bd6-0708-4627-9605-638deb374fc5\" align=\"absmiddle\" width=\"\" height=\"\" style=\"white-space: normal;\"/></p>"},{"key":"D","value":"<p>（2/7）&nbsp;<img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/9dfd5794-4fa5-457c-b66a-0749686d4e16\" align=\"absmiddle\" width=\"\" height=\"\"/></p>"}],"Version":"e9ee65061c6049df9e4ad1aec8941a6b","unionid":"1655251715048-58429","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177379,"max_retry":1,"showScore":true,"TemplateID":916851,"difficulty":1,"library_id":11775,"problem_id":177379,"remarkFold":true,"ProblemType":1,"answerIndex":1,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      53.（单选题）\n      </span>\n      <p> \n  如上题(单选22题)所示预约表,通过插入非计算延迟可以实现流水线的无冲突最优调度,此时可以达到的流水线的最大吞吐率是(假设流水线时钟周期为<img src='https://qn-sc0.yuketang.cn/ue_i/20220614/752f1c45-11fe-4563-b019-797aef87209f' align='absmiddle' width='' height=''> )\n     \n \n</p>\n    ","template_id":916851,"problemIndex":53,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":54,"Body":"<p>一个单处理器采用Cache-主存两层存储结构,指令Cache和数据Cache分离,它们的命中率分别是H<sub style=\"white-space: normal;\">i</sub>与H<sub style=\"white-space: normal;\">d</sub><sub style=\"white-space: normal;\">。</sub>处理机访问两个Cache的时间都是c个时钟周期,一次访问主存储器的延迟是b个时钟周期。在CPU进行的所有访存操作中,访问指令Cache的百分比是F<sub style=\"white-space: normal;\">i</sub>。数据Cache采用写回和写分配(write-back&amp;write-allocate)策略,当数据Cache访问缺失时,被替换块(dirty位为1)需要写回主存的情况占比是F<sub style=\"white-space: normal;\">d</sub>。则该处理器的平均存储器访问时间为：</p>","Type":"SingleChoice","data":{},"Score":1,"index":0,"score":1,"isEdit":true,"Options":[{"key":"A","value":"<p><span style=\"font-size: 16px;font-family: &#39;Times New Roman&#39;, serif\">F<sub>i</sub>&nbsp;( H<sub>i</sub>*c+(1-H<sub>i</sub>)(b+c) ) + (1-F<sub>i</sub>)( H<sub>d</sub>*c+(1-H<sub>d</sub>) ( F<sub>d</sub>&nbsp;(b+c) +(1-F<sub>d</sub>) (b+c) ) )</span></p>"},{"key":"B","value":"<p><span style=\"font-size: 16px;font-family: &#39;Times New Roman&#39;, serif\">F<sub>i</sub>&nbsp;( H<sub>i</sub>*c+(1-H<sub>i</sub>)(2b+c) ) + (1-F<sub>i</sub>)( H<sub>d</sub>*c+(1-H<sub>d</sub>) ( F<sub>d</sub>&nbsp;(2b+c) +(1-F<sub>d</sub>) (2b+c) ) )</span></p>"},{"key":"C","value":"<p><span style=\"font-size: 16px;font-family: &#39;Times New Roman&#39;, serif\">F<sub>i</sub>&nbsp;( H<sub>i</sub>*c+(1-H<sub>i</sub>)(b+c) ) + (1-F<sub>i</sub>)( H<sub>d</sub>*c+(1-H<sub>d</sub>) ( F<sub>d</sub>&nbsp;(2b+c) +(1-F<sub>d</sub>) (b+c) ) )</span></p>"},{"key":"D","value":"<p><span style=\"font-size: 16px;font-family: &#39;Times New Roman&#39;, serif\">F<sub>i</sub>&nbsp;( H<sub>i</sub>*c+(1-H<sub>i</sub>)(b+c) ) + (1-F<sub>i</sub>)( H<sub>d</sub>*c+(1-H<sub>d</sub>) ( F<sub>d</sub>&nbsp;(b+c) +(1-F<sub>d</sub>) (2b+c) ) )</span></p>"},{"key":"E","value":"<p>以上都不对</p>"}],"Version":"bcec09593cf44617aebb25486c3e1c16","unionid":"1655251715048-20726","TypeText":"单选题","HasRemark":false,"LibraryID":11775,"ProblemID":177380,"max_retry":1,"showScore":true,"TemplateID":916845,"difficulty":1,"library_id":11775,"problem_id":177380,"remarkFold":true,"ProblemType":1,"answerIndex":2,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      54.（单选题）\n      </span>\n      <p>一个单处理器采用Cache-主存两层存储结构,指令Cache和数据Cache分离,它们的命中率分别是H<sub style=\"white-space: normal;\">i</sub>与H<sub style=\"white-space: normal;\">d</sub><sub style=\"white-space: normal;\">。</sub>处理机访问两个Cache的时间都是c个时钟周期,一次访问主存储器的延迟是b个时钟周期。在CPU进行的所有访存操作中,访问指令Cache的百分比是F<sub style=\"white-space: normal;\">i</sub>。数据Cache采用写回和写分配(write-back&amp;write-allocate)策略,当数据Cache访问缺失时,被替换块(dirty位为1)需要写回主存的情况占比是F<sub style=\"white-space: normal;\">d</sub>。则该处理器的平均存储器访问时间为：</p>\n    ","template_id":916845,"problemIndex":54,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"Body":"<p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">一台单处理机可以以标量方式运行，也可以以向量方式运行。假设向量方式运算速度是标量方式的</span><span style=\"line-height: 16.100000381469727px\">9</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">倍。某基准程序在此处理机上运行时间为</span><span style=\"line-height: 16.100000381469727px\">T</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，向量方式占整个运行时间的</span><span style=\"line-height: 16.100000381469727px\">&nbsp;25%</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，其余的时间则以标量方式运行。</span></p><p class=\"MsoListParagraph\" style=\"margin-left:56px;line-height:115%\">1)<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 宋体\">上述程序中向量化代码所占的比例是</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空1]</span><span style=\"font-family: 宋体\">。</span></p><p class=\"MsoListParagraph\" style=\"margin-left:56px;line-height:115%\">2)<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 宋体\">我们通过硬件优化，使向量方式运算速度加倍，此时可达到的加速比（与全部用标量方式运行相比）是</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空2]</span><span style=\"font-family: 宋体\">。</span></p><p class=\"MsoListParagraph\" style=\"margin-left:56px;line-height:115%\">3)<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 宋体\">如果要达到与</span>2<span style=\"font-family: 宋体\">）硬件优化相同的加速比，采用编译优化的软件方法，用向量化编译器支持同样的基准程序，其新的向量化代码所占的比例是</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空3]</span><span style=\"font-family: 宋体\">。</span></p><p><br/></p>","Type":"FillBlank","data":{},"Score":3,"index":0,"score":3,"Blanks":[{"Num":1,"Score":1,"score":1,"FuzzyMatch":true,"CaseSensitive":false},{"Num":2,"Score":1,"score":1,"FuzzyMatch":true,"CaseSensitive":false},{"Num":3,"Score":1,"score":1,"FuzzyMatch":true,"CaseSensitive":false}],"isEdit":false,"Options":[],"Version":"98ea42842afd4b85bf47b8191fcb1e9a","TypeText":"填空题","HasRemark":false,"LibraryID":11775,"ProblemID":177381,"max_retry":1,"TemplateID":916888,"library_id":11775,"problem_id":177381,"BlanksScore":[],"ProblemType":4,"template_id":916888,"review_detail":{},"OrderInsensitive":false},{"key":56,"Body":"<p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">假设一个</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">共有</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个块，每块大小为</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个字节。</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">采用</span><span style=\"line-height: 16.100000381469727px\">LRU</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">替换策略，初始时为空。当程序执行过程中访存的字节地址序列为：</span><span style=\"line-height: 16.100000381469727px\">0</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">0</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">4&nbsp;</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">时，如果采用直接映射方式，</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的命中次数为</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空1]</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">次；如果采用</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">路组相连（用地址第</span><span style=\"line-height: 16.100000381469727px\">0</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">位作</span><span style=\"line-height: 16.100000381469727px\">index</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">），&nbsp;</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的命中次数为</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空2]</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">次。</span></p><p><br/></p>","Type":"FillBlank","data":{},"Score":2,"index":0,"score":2,"Blanks":[{"Num":1,"Score":1,"score":1,"FuzzyMatch":true,"CaseSensitive":false},{"Num":2,"Score":1,"score":1,"FuzzyMatch":true,"CaseSensitive":false}],"isEdit":true,"Options":[],"Version":"0849e3db35bf4ff9ad23a0b53bc07029","unionid":"1655251715048-53492","TypeText":"填空题","HasRemark":false,"LibraryID":11775,"ProblemID":177382,"max_retry":1,"showScore":true,"TemplateID":916895,"difficulty":1,"library_id":11775,"problem_id":177382,"remarkFold":true,"BlanksScore":[],"ProblemType":4,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      56.（填空题）\n      </span>\n      <p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">假设一个</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">共有</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个块，每块大小为</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个字节。</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">采用</span><span style=\"line-height: 16.100000381469727px\">LRU</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">替换策略，初始时为空。当程序执行过程中访存的字节地址序列为：</span><span style=\"line-height: 16.100000381469727px\">0</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">0</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">4&nbsp;</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">时，如果采用直接映射方式，</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的命中次数为</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空1]</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">次；如果采用</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">路组相连（用地址第</span><span style=\"line-height: 16.100000381469727px\">0</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">位作</span><span style=\"line-height: 16.100000381469727px\">index</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">），</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的命中次数为</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空2]</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">次。</span></p><p><br/></p>\n    ","template_id":916895,"problemIndex":56,"review_detail":{},"isShowGrayArea":true,"OrderInsensitive":false,"blanksResultTexts":[{"num":1,"text":"2","FuzzyMatch":true,"CaseSensitive":false},{"num":2,"text":"2","FuzzyMatch":true,"CaseSensitive":false}],"showFooterAddExercisePopover":false},{"Body":"<p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">假设有一个两级</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，</span><span style=\"line-height: 16.100000381469727px\">L1 Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的命中时间是</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个时钟周期，缺失率为</span><span style=\"line-height: 16.100000381469727px\">10%</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">。</span><span style=\"line-height: 16.100000381469727px\">L2 Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的命中时间为</span><span style=\"line-height: 16.100000381469727px\">10</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个时钟周期，局部缺失率（相对于所有</span><span style=\"line-height: 16.100000381469727px\">L2 Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">访问）为</span><span style=\"line-height: 16.100000381469727px\">20%</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，缺失代价为</span><span style=\"line-height: 16.100000381469727px\">100</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个时钟周期，则平均存储器访问时间（</span><span style=\"line-height: 16.100000381469727px\">AMAT</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">）为</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空1]</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个时钟周期。</span></p><p><br/></p>","Type":"FillBlank","data":{},"Score":1,"index":0,"score":1,"Blanks":[{"Num":1,"Score":1,"score":1,"FuzzyMatch":false,"CaseSensitive":false}],"isEdit":false,"Options":[],"Version":"82f869361721411b8de8a439a7e59863","TypeText":"填空题","HasRemark":false,"LibraryID":11775,"ProblemID":177383,"max_retry":1,"TemplateID":916910,"library_id":11775,"problem_id":177383,"BlanksScore":[],"ProblemType":4,"template_id":916910,"review_detail":{},"OrderInsensitive":false},{"Body":"<p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">在</span><span style=\"line-height: 16.100000381469727px\">CRAY-1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">机器上计算</span><span style=\"line-height: 16.100000381469727px\">D=A</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">×</span><span style=\"line-height: 16.100000381469727px\">(B+C)</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，其中</span><span style=\"line-height: 16.100000381469727px\">A</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">、</span><span style=\"line-height: 16.100000381469727px\">B</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">、</span><span style=\"line-height: 16.100000381469727px\">C</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">、</span><span style=\"line-height: 16.100000381469727px\">D</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">都是长度为</span><span style=\"line-height: 16.100000381469727px\">64</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的向量，并且</span><span style=\"line-height: 16.100000381469727px\">A</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">、</span><span style=\"line-height: 16.100000381469727px\">B</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">、</span><span style=\"line-height: 16.100000381469727px\">C</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">已经存放在相应的向量寄存器中。</span><span style=\"line-height: 16.100000381469727px\">CRAY-1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的向量寄存器长度为</span><span style=\"line-height: 16.100000381469727px\">64</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，所用浮点功能部件的执行时间分别为：相加</span><span style=\"line-height: 16.100000381469727px\">5</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">拍，相乘</span><span style=\"line-height: 16.100000381469727px\">7</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">拍，把向量数据元素送往功能部件以及把结果存入向量寄存器都需要</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">拍时间。不采用向量链接方式，完成该计算所需的最短拍数是</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空1]</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">拍；采用向量链接方式，完成该计算所需的最短拍数是</span><span class=\"blank-item\" style=\"display:inline-block;\">[填空2]</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">拍。</span></p><p><br/></p>","Type":"FillBlank","data":{},"Score":2,"index":0,"score":2,"Blanks":[{"Num":1,"Score":1,"score":1,"FuzzyMatch":true,"CaseSensitive":false},{"Num":2,"Score":1,"score":1,"FuzzyMatch":true,"CaseSensitive":false}],"isEdit":false,"Options":[],"Version":"76dd8c2598a943109f9e0f2060a6e893","TypeText":"填空题","HasRemark":false,"LibraryID":11775,"ProblemID":177384,"max_retry":1,"TemplateID":916911,"library_id":11775,"problem_id":177384,"BlanksScore":[],"ProblemType":4,"template_id":916911,"review_detail":{},"OrderInsensitive":false},{"key":59,"Body":"<p class=\"MsoListParagraph\" style=\"margin-top: 8px;text-indent: 28px;white-space: normal;line-height: 16.100000381469727px\"><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">设计一个处理器</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，该</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">纯数据容量</span><span style=\"line-height: 16.100000381469727px\">64K字节</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，采用</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">路组相联，</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">块大小为</span><span style=\"line-height: 16.100000381469727px\">64</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">字节，每个块有</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个有效（</span><span style=\"line-height: 16.100000381469727px\">Valid</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">）位和</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个脏(</span><span style=\"line-height: 16.100000381469727px\">Dirty)</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">位。假设处理器的物理地址总共</span><span style=\"line-height: 16.100000381469727px\">&nbsp;46&nbsp;</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">位，试计算：</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 115%\">1、<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">地址的</span><span style=\"line-height: 16.100000381469727px\">tag</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">域、</span><span style=\"line-height: 16.100000381469727px\">index</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">域以及</span><span style=\"line-height: 16.100000381469727px\">block offset</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">域的位数。（</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">分）</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 115%\">2、<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">为实现该</span><span style=\"line-height: 16.100000381469727px\">&nbsp;Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，需要</span><span style=\"line-height: 16.100000381469727px\">&nbsp;SRAM&nbsp;</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的总的位数（含纯数据</span><span style=\"line-height: 16.100000381469727px\">&nbsp;Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">和附加信息位）是多少（以</span><span style=\"line-height: 16.100000381469727px\">Kbits</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">为单位）？（</span><span style=\"line-height: 16.100000381469727px\">3</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">分）</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 115%\">3、<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">假定</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">初始为空，整数大小为</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">字节，数组是</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">块对齐的。考虑以下两种对已访问位置计数的代码，请问哪段代码</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">命中率更高？说明原因，指明是由于哪种类型的</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">缺失造成的？ &nbsp; &nbsp; （</span><span style=\"line-height: 16.100000381469727px\">3</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">分）</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/895939e9-5fd2-40fe-bf5f-8969049faea9.png\" alt=\"image.png\" width=\"80%\" height=\"auto\"/></p>","Type":"ShortAnswer","data":{},"Score":8,"index":0,"score":8,"isEdit":true,"Options":[],"Version":"7943a4589c8442ee9c98881271088dd3","unionid":"1655197429720-5264","TypeText":"主观题","HasRemark":false,"LibraryID":11775,"ProblemID":177385,"max_retry":1,"showScore":true,"TemplateID":916912,"difficulty":1,"library_id":11775,"problem_id":177385,"remarkFold":true,"ProblemType":5,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      59.（主观题）\n      </span>\n      <p class=\"MsoListParagraph\" style=\"margin-top: 8px;text-indent: 28px;white-space: normal;line-height: 16.100000381469727px\"><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">设计一个处理器</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，该</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">纯数据容量</span><span style=\"line-height: 16.100000381469727px\">64KB</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，采用</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">路组相联，</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">块大小为</span><span style=\"line-height: 16.100000381469727px\">64</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">字节，每个块有</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个有效（</span><span style=\"line-height: 16.100000381469727px\">Valid</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">）位和</span><span style=\"line-height: 16.100000381469727px\">1</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">个脏（</span><span style=\"line-height: 16.100000381469727px\">Dirty</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">）位。假设处理器的物理地址总共</span><span style=\"line-height: 16.100000381469727px\">&nbsp;46&nbsp;</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">位，试计算：</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 115%\">1、<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">地址的</span><span style=\"line-height: 16.100000381469727px\">tag</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">域、</span><span style=\"line-height: 16.100000381469727px\">index</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">域以及</span><span style=\"line-height: 16.100000381469727px\">block offset</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">域的位数。（</span><span style=\"line-height: 16.100000381469727px\">2</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">分）</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 115%\">2、<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">为实现该</span><span style=\"line-height: 16.100000381469727px\">&nbsp;Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">，需要</span><span style=\"line-height: 16.100000381469727px\">&nbsp;SRAM&nbsp;</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">的总的位数（含纯数据</span><span style=\"line-height: 16.100000381469727px\">&nbsp;Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">和附加信息位）是多少（以</span><span style=\"line-height: 16.100000381469727px\">Kbits</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">为单位）？（</span><span style=\"line-height: 16.100000381469727px\">3</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">分）</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><span style=\"line-height: 115%\">3、<span style=\"font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">假定</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">初始为空，整数大小为</span><span style=\"line-height: 16.100000381469727px\">4</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">字节，数组是</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">块对齐的。考虑以下两种对已访问位置计数的代码，请问哪段代码</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">命中率更高？说明原因，指明是由于哪种类型的</span><span style=\"line-height: 16.100000381469727px\">Cache</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">缺失造成的？（</span><span style=\"line-height: 16.100000381469727px\">3</span><span style=\"line-height: 16.100000381469727px;font-family: 宋体\">分）</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-left: 28px;margin-bottom: 0;line-height: 115%\"><img src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/895939e9-5fd2-40fe-bf5f-8969049faea9.png\" alt=\"image.png\" width=\"80%\" height=\"auto\"/></p>\n    ","template_id":916912,"AllowResults":["text","pic","file"],"problemIndex":59,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":60,"Body":"<p class=\"MsoListParagraph\" style=\"margin-top:8px;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">假设一个</span><span style=\";line-height:115%;color:black\">RISC-V </span><span style=\";line-height:115%;font-family:宋体;color:black\">处理器，采用支持精确中断和推测执行的</span><span style=\";line-height:115%;color:black\"> Tomasulo </span><span style=\";line-height:115%;font-family:宋体;color:black\">算法。假设该处理器有</span><span style=\";line-height:115%;color:black\"> 2 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个</span><span style=\";line-height:115%;color:black\"> FP </span><span style=\";line-height:115%;font-family:宋体;color:black\">加法器，</span><span style=\";line-height:115%;color:black\">1 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个</span><span style=\";line-height:115%;color:black\">FP</span><span style=\";line-height:115%;font-family:宋体;color:black\">乘法</span><span style=\";line-height:115%;color:black\">/</span><span style=\";line-height:115%;font-family:宋体;color:black\">除法器，</span><span style=\";line-height:115%;color:black\">2 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个地址加法器，</span><span style=\";line-height:115%;color:black\">2 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个整数运算单元。在一个给定的周期内，只能发射（</span><span style=\";line-height:115%;color:black\">Issue</span><span style=\";line-height:115%;font-family:宋体;color:black\">）一条指令</span> <span style=\";line-height:115%;font-family:宋体;color:black\">，只有一条指令可以访问数据</span><span style=\";line-height:115%;color:black\">Cache</span><span style=\";line-height:115%;font-family:宋体;color:black\">，只有一条指令可以写</span><span style=\";line-height:115%;color:black\">CDB</span><span style=\";line-height:115%;font-family:宋体;color:black\">，只有一条指令可以提交（</span><span style=\";line-height:115%;color:black\">Commit</span><span style=\";line-height:115%;font-family:宋体;color:black\">）。并且：</span><span style=\";line-height:115%;color:black\">&nbsp;&nbsp; </span></p><p style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:56px;margin-bottom:0;text-align:justify;text-justify:inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family:宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family:等线\">FP </span><span style=\"font-size:12px;line-height:115%;font-family:等线\">加减法运算需要3 个周期 &nbsp;</span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family: 宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family:等线\">FP </span><span style=\"font-size:12px;line-height:115%;font-family:等线\">乘法/除法需要10 个周期</span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family: 宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family: 等线\">整数操作和地址计算（Load和 Store 指令在EXE 段执行地址计算）需要1个周期 </span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family: 宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family: 等线\">访问数据Cache 需要一个周期</span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"text-indent: 28px; font-size: 14px; line-height: 115%; font-family: 宋体;\">在下表中填写每条指令执行时各阶段的时钟周期号</span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"text-indent: 28px; font-size: 12px; line-height: 115%; font-family: 等线;\">（</span><span style=\"text-indent: 28px; font-size: 12px; line-height: 115%; font-family: 楷体;\">注意：cc<sub>执行</sub>= cc<sub>结束</sub>- cc<sub>开始</sub>+1</span><span style=\"text-indent: 28px; font-size: 12px; line-height: 115%; font-family: 等线;\">）</span></p><p><img id=\"1655190706520_0\" src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/160aefbb-25ba-4171-b870-b39bd2de422a.JPG\" width=\"80%\" height=\"auto\" alt=\"ss1.JPG\"/></p>","Type":"ShortAnswer","data":{},"Score":10,"index":0,"score":10,"isEdit":true,"Options":[],"Version":"671048b325944f89a6c1637e49df5317","unionid":"1655197429720-7489","TypeText":"主观题","HasRemark":false,"LibraryID":11775,"ProblemID":177386,"max_retry":1,"showScore":true,"TemplateID":916929,"difficulty":1,"library_id":11775,"problem_id":177386,"remarkFold":true,"ProblemType":5,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      60.（主观题）\n      </span>\n      <p class=\"MsoListParagraph\" style=\"margin-top:8px;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">假设一个</span><span style=\";line-height:115%;color:black\">RISC-V </span><span style=\";line-height:115%;font-family:宋体;color:black\">处理器，采用支持精确中断和推测执行的</span><span style=\";line-height:115%;color:black\"> Tomasulo </span><span style=\";line-height:115%;font-family:宋体;color:black\">算法。假设该处理器有</span><span style=\";line-height:115%;color:black\"> 2 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个</span><span style=\";line-height:115%;color:black\"> FP </span><span style=\";line-height:115%;font-family:宋体;color:black\">加法器，</span><span style=\";line-height:115%;color:black\">1 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个</span><span style=\";line-height:115%;color:black\">FP</span><span style=\";line-height:115%;font-family:宋体;color:black\">乘法</span><span style=\";line-height:115%;color:black\">/</span><span style=\";line-height:115%;font-family:宋体;color:black\">除法器，</span><span style=\";line-height:115%;color:black\">2 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个地址加法器，</span><span style=\";line-height:115%;color:black\">2 </span><span style=\";line-height:115%;font-family:宋体;color:black\">个整数运算单元。在一个给定的周期内，只能发射（</span><span style=\";line-height:115%;color:black\">Issue</span><span style=\";line-height:115%;font-family:宋体;color:black\">）一条指令</span> <span style=\";line-height:115%;font-family:宋体;color:black\">，只有一条指令可以访问数据</span><span style=\";line-height:115%;color:black\">Cache</span><span style=\";line-height:115%;font-family:宋体;color:black\">，只有一条指令可以写</span><span style=\";line-height:115%;color:black\">CDB</span><span style=\";line-height:115%;font-family:宋体;color:black\">，只有一条指令可以提交（</span><span style=\";line-height:115%;color:black\">Commit</span><span style=\";line-height:115%;font-family:宋体;color:black\">）。并且：</span><span style=\";line-height:115%;color:black\">&nbsp;&nbsp; </span></p><p style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:56px;margin-bottom:0;text-align:justify;text-justify:inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family:宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family:等线\">FP </span><span style=\"font-size:12px;line-height:115%;font-family:等线\">加减法运算需要3 个周期 &nbsp;</span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family: 宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family:等线\">FP </span><span style=\"font-size:12px;line-height:115%;font-family:等线\">乘法/除法需要10 个周期</span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family: 宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family: 等线\">整数操作和地址计算（Load和 Store 指令在EXE 段执行地址计算）需要1个周期 </span></p><p style=\"margin-left:56px;text-align:justify;text-justify: inter-ideograph;line-height:115%\"><span style=\"font-size:12px;line-height:115%;font-family: 宋体\">•<span style=\"font:9px &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:12px;line-height:115%;font-family: 等线\">访问数据Cache 需要一个周期</span></p><p style=\"margin-top:8px;margin-right:0;margin-bottom:16px;margin-left:0;text-align:justify;text-justify:inter-ideograph;text-indent:28px;line-height:115%\"><span style=\"font-size:14px;line-height:115%;font-family:宋体;color:black\">在下表中填写每条指令执行时各阶段的时钟周期号。</span><span style=\"font-size: 12px;line-height:115%;font-family:等线\">（</span><span style=\"font-size:12px;line-height:115%;font-family:楷体\">注意：cc<sub>执行</sub>= cc<sub>结束</sub>- cc<sub>开始</sub>+1</span><span style=\"font-size:12px;line-height:115%;font-family:等线\">）</span><span style=\"font-size:14px;line-height:115%;font-family:等线\"> </span></p><p><img id=\"1655190706520_0\" src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/160aefbb-25ba-4171-b870-b39bd2de422a.JPG\" width=\"80%\" height=\"auto\" alt=\"ss1.JPG\"/></p>\n    ","template_id":916929,"AllowResults":["text","pic","file"],"problemIndex":60,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":61,"Body":"<p class=\"MsoListParagraph\" style=\"margin-top:8px;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">使用</span><span style=\"text-decoration:underline;\"><span style=\";line-height:115%;color:black\">2-bit</span></span><span style=\"text-decoration:underline;\"><span style=\";line-height:115%;font-family:宋体;color:black\">饱和计数器</span></span><span style=\";line-height:115%;font-family:宋体;color:black\">实现分支预测。当计数器的值为</span><span style=\";line-height:115%;color:black\">0</span><span style=\";line-height:115%;font-family:宋体;color:black\">或</span><span style=\";line-height:115%;color:black\">1</span><span style=\";line-height:115%;font-family:宋体;color:black\">的时候预测为</span><span style=\";line-height:115%;color:black\">not taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">；</span> <span style=\";line-height:115%;font-family:宋体;color:black\">计数器的值为</span><span style=\";line-height:115%;color:black\">2</span><span style=\";line-height:115%;font-family:宋体;color:black\">或</span><span style=\";line-height:115%;color:black\">3</span><span style=\";line-height:115%;font-family:宋体;color:black\">的时候预测为</span><span style=\";line-height:115%;color:black\">taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">。实际分支为</span><span style=\";line-height:115%;color:black\">taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">时，计数器</span><span style=\";line-height:115%;color:black\">+1</span><span style=\";line-height:115%;font-family:宋体;color:black\">（最大为</span><span style=\";line-height:115%;color:black\">3</span><span style=\";line-height:115%;font-family:宋体;color:black\">），否则，实际分支为</span><span style=\";line-height:115%;color:black\">not taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">时，计数器</span><span style=\";line-height:115%;color:black\">-1</span><span style=\";line-height:115%;font-family:宋体;color:black\">（最小为</span><span style=\";line-height:115%;color:black\">0</span><span style=\";line-height:115%;font-family:宋体;color:black\">）。假定初始状态下饱和计数器的值是</span><span style=\";line-height:115%;color:black\">0</span><span style=\";line-height:115%;font-family:宋体;color:black\">，多个分支指令对应的饱和计数器相互独立，预测结果互不干扰。</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">现有</span><span style=\";line-height:115%;color:black\">Fibonacci</span><span style=\";line-height:115%;font-family:宋体;color:black\">数列前几项的计算程序如下（左侧为高级语言，右侧为对应的汇编语言）：</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\"><img id=\"1655192573648_0\" src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/13db6aaa-43e4-4bf5-bdbc-981d274540e7.JPG\" width=\"80%\" height=\"auto\" alt=\"ss2.JPG\"/></span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">右侧的汇编代码采用</span><span style=\";line-height:115%;color:black\">AT&amp;T</span><span style=\";line-height:115%;font-family:宋体;color:black\">格式，在函数调用的时候忽视了栈的变化。</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;color:black\">$imm</span><span style=\";line-height:115%;font-family:宋体;color:black\">表示一个立即数，</span><span style=\";line-height:115%;color:black\">%reg</span><span style=\";line-height:115%;font-family:宋体;color:black\">表示一个通用寄存器。</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">请问在执行右侧汇编语言</span><span style=\";line-height:115%;color:black\">Main</span><span style=\";line-height:115%;font-family:宋体;color:black\">例程时，采用</span><span style=\";line-height:115%;color:black\">2-bit</span><span style=\";line-height:115%;font-family:宋体;color:black\">饱和计数器进行分支预测的情况下，右图中第</span><span style=\";line-height:115%;color:black\">10</span><span style=\";line-height:115%;font-family:宋体;color:black\">行</span><span style=\"line-height: 115%; color: black; text-decoration: none;\">jns</span><strong><span style=\"line-height: 115%; color: black; text-decoration: none;\"></span></strong><span style=\"line-height: 115%; font-family: 宋体; color: black; text-decoration: none;\">指令</span><span style=\";line-height:115%;font-family:宋体;color:black\">位置会发生多少次预测错误？请给出计算依据。</span></p><p><br/></p>","Type":"ShortAnswer","data":{},"Score":10,"index":0,"score":10,"isEdit":true,"Options":[],"Version":"3ca6fbf54d0e4361835614e9c8855bdc","unionid":"1655213035643-56008","TypeText":"主观题","HasRemark":false,"LibraryID":11775,"ProblemID":177387,"max_retry":1,"showScore":true,"TemplateID":916930,"difficulty":1,"library_id":11775,"problem_id":177387,"remarkFold":true,"ProblemType":5,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      61.（主观题）\n      </span>\n      <p class=\"MsoListParagraph\" style=\"margin-top:8px;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">使用</span><span style=\"text-decoration:underline;\"><span style=\";line-height:115%;color:black\">2-bit</span></span><span style=\"text-decoration:underline;\"><span style=\";line-height:115%;font-family:宋体;color:black\">饱和计数器</span></span><span style=\";line-height:115%;font-family:宋体;color:black\">实现分支预测。当计数器的值为</span><span style=\";line-height:115%;color:black\">0</span><span style=\";line-height:115%;font-family:宋体;color:black\">或</span><span style=\";line-height:115%;color:black\">1</span><span style=\";line-height:115%;font-family:宋体;color:black\">的时候预测为</span><span style=\";line-height:115%;color:black\">not taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">；</span> <span style=\";line-height:115%;font-family:宋体;color:black\">计数器的值为</span><span style=\";line-height:115%;color:black\">2</span><span style=\";line-height:115%;font-family:宋体;color:black\">或</span><span style=\";line-height:115%;color:black\">3</span><span style=\";line-height:115%;font-family:宋体;color:black\">的时候预测为</span><span style=\";line-height:115%;color:black\">taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">。实际分支为</span><span style=\";line-height:115%;color:black\">taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">时，计数器</span><span style=\";line-height:115%;color:black\">+1</span><span style=\";line-height:115%;font-family:宋体;color:black\">（最大为</span><span style=\";line-height:115%;color:black\">3</span><span style=\";line-height:115%;font-family:宋体;color:black\">），否则，实际分支为</span><span style=\";line-height:115%;color:black\">not taken</span><span style=\";line-height:115%;font-family:宋体;color:black\">时，计数器</span><span style=\";line-height:115%;color:black\">-1</span><span style=\";line-height:115%;font-family:宋体;color:black\">（最小为</span><span style=\";line-height:115%;color:black\">0</span><span style=\";line-height:115%;font-family:宋体;color:black\">）。假定初始状态下饱和计数器的值是</span><span style=\";line-height:115%;color:black\">0</span><span style=\";line-height:115%;font-family:宋体;color:black\">，多个分支指令对应的饱和计数器相互独立，预测结果互不干扰。</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">现有</span><span style=\";line-height:115%;color:black\">Fibonacci</span><span style=\";line-height:115%;font-family:宋体;color:black\">数列前几项的计算程序如下（左侧为高级语言，右侧为对应的汇编语言）：</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\"><img id=\"1655192573648_0\" src=\"https://qn-sc0.yuketang.cn/ue_i/20220614/13db6aaa-43e4-4bf5-bdbc-981d274540e7.JPG\" width=\"80%\" height=\"auto\" alt=\"ss2.JPG\"/></span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">右侧的汇编代码采用</span><span style=\";line-height:115%;color:black\">AT&amp;T</span><span style=\";line-height:115%;font-family:宋体;color:black\">格式，在函数调用的时候忽视了栈的变化。</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;color:black\">$imm</span><span style=\";line-height:115%;font-family:宋体;color:black\">表示一个立即数，</span><span style=\";line-height:115%;color:black\">%reg</span><span style=\";line-height:115%;font-family:宋体;color:black\">表示一个通用寄存器。</span></p><p class=\"MsoListParagraph\" style=\"margin-top:8px;margin-right:0;margin-bottom: 16px;margin-left:0;text-indent:28px;line-height:115%\"><span style=\";line-height:115%;font-family:宋体;color:black\">请问在执行右侧汇编语言</span><span style=\";line-height:115%;color:black\">Main</span><span style=\";line-height:115%;font-family:宋体;color:black\">例程时，采用</span><span style=\";line-height:115%;color:black\">2-bit</span><span style=\";line-height:115%;font-family:宋体;color:black\">饱和计数器进行分支预测的情况下，右图中第</span><span style=\";line-height:115%;color:black\">10</span><span style=\";line-height:115%;font-family:宋体;color:black\">行</span><em><span style=\"text-decoration: underline;\"><span style=\"line-height: 115%; color: black; text-decoration: underline;\">jns</span></span></em><span style=\"text-decoration: underline;\"><strong><span style=\"line-height: 115%; color: black; text-decoration: underline;\"></span></strong><span style=\"line-height: 115%; font-family: 宋体; color: black; text-decoration: underline;\">指令</span></span><span style=\";line-height:115%;font-family:宋体;color:black\">位置会发生多少次预测错误？请给出计算依据。</span></p><p><br/></p>\n    ","template_id":916930,"AllowResults":["text","pic","file"],"problemIndex":61,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false},{"key":62,"Body":"<p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-bottom: 16px;white-space: normal;text-indent: 28px;line-height: 18.4px\"><span style=\"line-height: 18.4px;font-family: 宋体\">一台模型机共有</span><span style=\"line-height: 18.4px\">7</span><span style=\"line-height: 18.4px;font-family: 宋体\">条指令，各指令的使用频率分别为： &nbsp;</span><span style=\"line-height: 18.4px\">35%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，&nbsp;</span><span style=\"line-height: 18.4px\">25%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，&nbsp;</span><span style=\"line-height: 18.4px\">20%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，&nbsp;</span><span style=\"line-height: 18.4px\">10%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，&nbsp;</span><span style=\"line-height: 18.4px\">5%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，&nbsp;</span><span style=\"line-height: 18.4px\">3%</span><span style=\"line-height: 18.4px;font-family: 宋体\">和</span><span style=\"line-height: 18.4px\">2%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，有</span><span style=\"line-height: 18.4px\">8</span><span style=\"line-height: 18.4px;font-family: 宋体\">个通用数据寄存器，</span><span style=\"line-height: 18.4px\">2</span><span style=\"line-height: 18.4px;font-family: 宋体\">个变址寄存器。</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-bottom: 16px;white-space: normal;text-indent: 28px;line-height: 18.4px\"><span style=\"line-height: 18.4px;\">1、<span style=\"font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 18.4px; font-family: 宋体;\">要求操作码的平均长度最短，请设计操作码的编码，并计算所设计操作码的平均长度。（</span><span style=\"line-height: 18.4px;\">5<span style=\"font-family:宋体\">分）</span></span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-bottom: 0px;margin-left: 28px;white-space: normal;line-height: 18.4px\"><span style=\"line-height: 18.4px\">2、<span style=\"font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 18.4px;font-family: 宋体\">设计</span><span style=\"line-height: 18.4px\">8</span><span style=\"line-height: 18.4px;font-family: 宋体\">字长的寄存器</span><span style=\"line-height: 18.4px\">-</span><span style=\"line-height: 18.4px;font-family: 宋体\">寄存器型指令</span><span style=\"line-height: 18.4px\">3</span><span style=\"line-height: 18.4px;font-family: 宋体\">条，</span><span style=\"line-height: 18.4px\">16</span><span style=\"line-height: 18.4px;font-family: 宋体\">位字长的寄存器</span><span style=\"line-height: 18.4px\">-</span><span style=\"line-height: 18.4px;font-family: 宋体\">存储器型变址寻址方式指令</span><span style=\"line-height: 18.4px\">4</span><span style=\"line-height: 18.4px;font-family: 宋体\">条，变址范围不小于</span><span style=\"line-height: 18.4px\">±127</span><span style=\"line-height: 18.4px;font-family: 宋体\">。请设计指令格式，并给出各字段的长度和操作码的编码。（</span><span style=\"line-height: 18.4px\">5</span><span style=\"line-height: 18.4px;font-family: 宋体\">分）</span></p><p><br/></p>","Type":"ShortAnswer","data":{},"Score":10,"index":0,"score":10,"isEdit":true,"Options":[],"Version":"3cc7f7958d0b489e92d45451513d1d98","unionid":"1655251715048-43159","TypeText":"主观题","HasRemark":false,"LibraryID":11775,"ProblemID":177388,"max_retry":1,"showScore":true,"TemplateID":916931,"difficulty":1,"library_id":11775,"problem_id":177388,"remarkFold":true,"ProblemType":5,"complexBody":"\n      <span class=\"font16 color3 font-weight500 item__complex-body-wrapper__pre\">\n      62.（主观题）\n      </span>\n      <p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-bottom: 16px;white-space: normal;text-indent: 28px;line-height: 18.4px\"><span style=\"line-height: 18.4px;font-family: 宋体\">一台模型机共有</span><span style=\"line-height: 18.4px\">7</span><span style=\"line-height: 18.4px;font-family: 宋体\">条指令，各指令的使用频率分别为</span><span style=\"line-height: 18.4px\">35%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，</span><span style=\"line-height: 18.4px\">25%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，</span><span style=\"line-height: 18.4px\">20%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，</span><span style=\"line-height: 18.4px\">10%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，</span><span style=\"line-height: 18.4px\">5%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，</span><span style=\"line-height: 18.4px\">3%</span><span style=\"line-height: 18.4px;font-family: 宋体\">和</span><span style=\"line-height: 18.4px\">2%</span><span style=\"line-height: 18.4px;font-family: 宋体\">，有</span><span style=\"line-height: 18.4px\">8</span><span style=\"line-height: 18.4px;font-family: 宋体\">个通用数据寄存器，</span><span style=\"line-height: 18.4px\">2</span><span style=\"line-height: 18.4px;font-family: 宋体\">个变址寄存器。</span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-bottom: 16px;white-space: normal;text-indent: 28px;line-height: 18.4px\"><span style=\"line-height: 18.4px;\">1、<span style=\"font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 18.4px; font-family: 宋体;\">要求操作码的平均长度最短，请设计操作码的编码，并计算所设计操作码的平均长度。（</span><span style=\"line-height: 18.4px;\">5<span style=\"font-family:宋体\">分）</span></span></p><p class=\"MsoListParagraph\" style=\"margin-top: 8px;margin-bottom: 0px;margin-left: 28px;white-space: normal;line-height: 18.4px\"><span style=\"line-height: 18.4px\">2、<span style=\"font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"line-height: 18.4px;font-family: 宋体\">设计</span><span style=\"line-height: 18.4px\">8</span><span style=\"line-height: 18.4px;font-family: 宋体\">字长的寄存器</span><span style=\"line-height: 18.4px\">-</span><span style=\"line-height: 18.4px;font-family: 宋体\">寄存器型指令</span><span style=\"line-height: 18.4px\">3</span><span style=\"line-height: 18.4px;font-family: 宋体\">条，</span><span style=\"line-height: 18.4px\">16</span><span style=\"line-height: 18.4px;font-family: 宋体\">位字长的寄存器</span><span style=\"line-height: 18.4px\">-</span><span style=\"line-height: 18.4px;font-family: 宋体\">存储器型变址寻址方式指令</span><span style=\"line-height: 18.4px\">4</span><span style=\"line-height: 18.4px;font-family: 宋体\">条，变址范围不小于</span><span style=\"line-height: 18.4px\">±127</span><span style=\"line-height: 18.4px;font-family: 宋体\">。请设计指令格式，并给出各字段的长度和操作码的编码。（</span><span style=\"line-height: 18.4px\">5</span><span style=\"line-height: 18.4px;font-family: 宋体\">分）</span></p><p><br/></p>\n    ","template_id":916931,"AllowResults":["text","pic","file"],"problemIndex":62,"review_detail":{},"isShowGrayArea":false,"showFooterAddExercisePopover":false}],"has_problem_dict":false,"title":"《计算机系统结构》试卷（2022）"}}
